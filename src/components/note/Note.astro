---
import { type CollectionEntry, render } from "astro:content";
import type { HTMLTag, Polymorphic } from "astro/types";
import FormattedDate from "@/components/FormattedDate.astro";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  note: CollectionEntry<"note">;
  isPreview?: boolean | undefined;
};

const { as: Tag = "div", note, isPreview = false } = Astro.props;
const { Content } = await render(note);
---

<article
  class:list={[
    isPreview &&
      "group relative overflow-hidden rounded-lg bg-gray-100 p-3 transition-all duration-200 hover:shadow-md dark:bg-gray-800/60 dark:hover:shadow-lg",
  ]}
  data-pagefind-body={isPreview ? false : true}
>
  <Tag class="title" class:list={{ "text-base": isPreview }}>
    {
      isPreview ? (
        <a class="cactus-link" href={`/notes/${note.id}/`}>
          {note.data.title}
        </a>
      ) : (
        <>{note.data.title}</>
      )
    }
  </Tag>
  <FormattedDate
    dateTimeOptions={{
      hour: "2-digit",
      minute: "2-digit",
      year: "2-digit",
      month: "2-digit",
      day: "2-digit",
    }}
    date={note.data.publishDate}
  />
  <div
    class="prose prose-sm prose-cactus mt-4 max-w-none [&>p:last-of-type]:mb-0"
    class:list={{ "line-clamp-6": isPreview }}
  >
    <Content />
  </div>
</article>
