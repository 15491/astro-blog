---
import { render } from "astro:content";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { Icon } from "astro-icon/components";
import PostPreview from "@/components/blog/PostPreview.astro";
import Pagination from "@/components/Paginator.astro";
import { getAllPosts, getTagMeta, getUniqueTags } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = await getAllPosts();
  const sortedPosts = allPosts.sort(collectionDateSort);
  const uniqueTags = getUniqueTags(sortedPosts);

  return uniqueTags.flatMap((tag) => {
    const postsWithTag = sortedPosts.filter((post) => post.data.tags.includes(tag));
    return paginate(postsWithTag, {
      pageSize: 10,
      params: { tag },
    });
  });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const { tag } = Astro.params;
const tagMeta = await getTagMeta(tag);

const TagContent = tagMeta ? (await render(tagMeta)).Content : null;

const meta = {
  description: tagMeta?.data.description ?? `View all posts with the tag - ${tag}`,
  title: tagMeta?.data.title ?? `Posts about ${tag}`,
};

const paginationProps = {
  ...(page.url.prev && {
    prevUrl: {
      text: "← Previous Tags",
      url: page.url.prev,
    },
  }),
  ...(page.url.next && {
    nextUrl: {
      text: "Next Tags →",
      url: page.url.next,
    },
  }),
};
---

<PageLayout meta={meta}>
  <nav class="mb-8" aria-label="Breadcrumbs">
    <ul class="flex items-center">
      <li class="flex items-center">
        <a class="text-accent" href="/tags/">Tags</a>
        <Icon aria-hidden="true" name="mdi:chevron-right" class="mx-1.5" />
      </li>
      <li aria-current="page" class=""><span aria-hidden="true">#</span>{tag}</li>
    </ul>
  </nav>
  <h1 class="title capitalize">{tagMeta?.data.title ?? `Posts about ${tag}`}</h1>
  <div class="prose prose-sm prose-cactus mb-16 max-w-none">
    {tagMeta?.data.description && <p>{tagMeta.data.description}</p>}
    {TagContent && <TagContent />}
  </div>
  <ul class="space-y-4">
    {
      page.data.map((p) => (
        <li>
          <PostPreview as="h2" post={p} />
        </li>
      ))
    }
  </ul>
  <Pagination {...paginationProps} />
  <button
    id="back-btn"
    class="fixed end-4 top-8 z-90 flex h-10 w-10 cursor-pointer items-center justify-center rounded-full border-2 border-red-200 bg-red-100 text-red-700 transition-all duration-300 hover:border-red-300 hover:bg-red-200 hover:text-red-800 hover:shadow-md sm:end-8 sm:h-12 sm:w-12 dark:border-red-800/30 dark:bg-red-900/20 dark:text-red-400 dark:hover:border-red-700/50 dark:hover:bg-red-800/30 dark:hover:text-red-300"
    title="返回上一页"
  >
    <span class="sr-only">返回上一页</span>
    <svg
      aria-hidden="true"
      class="h-6 w-6"
      fill="none"
      focusable="false"
      stroke="currentColor"
      stroke-width="2"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M15 18l-6-6 6-6" stroke-linecap="round" stroke-linejoin="round"></path>
    </svg>
  </button>
  <script>
    const backBtn = document.getElementById("back-btn") as HTMLButtonElement;
    backBtn.addEventListener("click", () => {
      history.back();
    });
  </script>
</PageLayout>
